- name: Create unseal directories
  file:
    path: "{{ unseal_keys_dir_output }}"
    state: directory
  delegate_to: localhost

- name: Create root key directories
  file:
    path: "{{ root_token_dir_output }}"
    state: directory
  delegate_to: localhost

- name: Create RO token directory
  file:
    path: "{{ ro_token_dir_output }}"
    state: directory
  delegate_to: localhost
  tags: token

- name: Create RW token directory
  file:
    path: "{{ rw_token_dir_output }}"
    state: directory
  delegate_to: localhost
  tags: token

- name: Initialise Vault operator with HTTPS
  shell: vault operator init -key-shares=5 -key-threshold=3 -format json
  environment:
    VAULT_ADDR: "https://127.0.0.1:8200"
    VAULT_SKIP_VERIFY: "true"
  register: vault_init_results
  run_once: true

- name: Parse output of vault init
  set_fact:
    vault_init_parsed: "{{ vault_init_results.stdout  | from_json }}"

- name: Write unseal keys to files
  copy:
    dest: "{{ unseal_keys_dir_output }}/unseal_key_{{ item.0 }}"
    content: "{{ item.1 }}"
  with_indexed_items: "{{ vault_init_parsed.unseal_keys_hex }}"
  delegate_to: localhost

- name: Write root token to file
  copy:
    content: "{{ vault_init_parsed.root_token }}"
    dest: "{{root_token_dir_output}}/rootkey"
  delegate_to: localhost

- name: Create scripts folder for auto_unseal 
  become: yes
  become_user: root
  file:
    path: /scripts
    state: directory
  tags: auto_unseal 

- name: Create an auto_unseal script
  become: yes
  become_user: root
  template: 
    src: unseal.sh.j2
    dest: /scripts/unseal.sh
    mode: u=rwx,g=rwx,o=rx
  tags: auto_unseal

# - name: Write unseal keys to unseal script
#   become: yes
#   become_user: root
#   copy:
#     dest: /scripts/unseal.sh
#     content: vault operator unseal {{ item }}
#   with_items: "{{ vault_init_parsed.unseal_keys_hex }}"
#   tags: auto_unseal 

- name: Read unseal keys from files
  shell: cat {{ unseal_keys_dir_output }}/{{ item }}
  with_items: 
    - unseal_key_0
    - unseal_key_1
    - unseal_key_3
  delegate_to: localhost
  register: unseal_keys
  tags: auto_unseal

- name: test
  debug: msg="{{ unseal_keys.results[0].stdout_lines | replace('[','') | replace(']','') }}"
  tags: auto_unseal

- name: Write unseal keys to unseal script
  become: yes
  become_user: root
  shell: |
    echo "vault operator unseal {{ unseal_keys.results[0].stdout_lines | replace('[','') | replace(']','') }}"  >> /scripts/unseal.sh
    echo "vault operator unseal {{ unseal_keys.results[1].stdout_lines | replace('[','') | replace(']','') }}"  >> /scripts/unseal.sh
    echo "vault operator unseal {{ unseal_keys.results[2].stdout_lines | replace('[','') | replace(']','') }}"  >> /scripts/unseal.sh
  tags: auto_unseal 

- name: Create vault-unseal.service unit file
  become: yes
  become_user: root
  template: 
    src: vault-unseal.service.j2
    dest: /etc/systemd/system/vault-unseal.service
  tags: auto_unseal

- name: Restart vault-unseal.service
  systemd_service:
    name: /etc/systemd/system/vault-unseal.service
    state: started
    enabled: true
    daemon_reload: true
  tags: auto_unseal